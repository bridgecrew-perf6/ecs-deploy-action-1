name: 'Deploy to ECS'
description: 'Deploy to ECS'
inputs:
   AWS_ACCESS_KEY_ID:
      description: 'AWS_ACCESS_KEY_ID'
      required: true
   AWS_SECRET_ACCESS_KEY:
      description: 'AWS_SECRET_ACCESS_KEY'
      required: true
   CLUSTER_NAME:
      description: 'CLUSTER_NAME'
      required: true
   SERVICE_NAME:
      description: 'SERVICE_NAME'
      required: true
   CONTAINER_NAME:
      description: 'CONTAINER_NAME'
      required: true
   ECR_REPOSITORY:
      description: 'ECR_REPOSITORY'
      required: true
   TASK_DEFINITION_FILE:
      description: 'TASK_DEFINITION_FILE'
      required: true
   DOCKER_FILE:
      description: 'DOCKER_FILE'
      required: true

runs:
  using: "composite"
  steps:
      - name: Checkout source code
        uses: actions/checkout@v2
        
      - uses: actions/setup-node@v2
        with:
          node-version: '16.10.0'
          cache: 'yarn'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ inputs.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ inputs.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
          
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ inputs.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG . -f ${{ inputs.DOCKER_FILE }}
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
        shell: bash

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ inputs.TASK_DEFINITION_FILE }}
          container-name: ${{ inputs.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ inputs.SERVICE_NAME }}
          cluster: ${{ inputs.CLUSTER_NAME }}
          wait-for-service-stability: true
